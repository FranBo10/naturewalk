{% extends 'base.html.twig' %} {% block title %} Guia {% endblock %} {% block
header %} {% include '_partials/_menu_guia.html.twig' %} {% endblock %} {% block
body %}
<style>
  .modal-above-navbar {
    z-index: 10000; /* Ajusta este valor según sea necesario */
  }
</style>
<div class="calendario-container">
  {% for message in app.flashes('success') %}
  <div class="alert alert-success text-center w-50 mx-auto my-2">
    <p>{{ message }}</p>
  </div>
  {% endfor %} {% for message in app.flashes('danger') %}
  <div class="alert alert-danger text-center w-50 mx-auto my-2">
    <p>{{ message }}</p>
  </div>
  {% endfor %}

  <div
    class="modal fade mt-5 modal-above-navbar"
    id="reservaModal"
    tabindex="-1"
    role="dialog"
    aria-labelledby="reservaModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog z-index-1010" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h3 class="col-md-3 modal-title me-3" id="modalFecha"></h3>
          <h3 class="col-md-6 modal-title" id="modalTitulo"></h3>
          <button
            type="button"
            class="btn-close col-md-3"
            data-bs-dismiss="modal"
          ></button>
        </div>
        <div class="modal-body">
          <div class="container-detalles mb-5">
            <div class="titulo__comentarios my-3">
              <h2>Observaciones del evento</h2>
            </div>
            <div class="comentario-lista" id="contenidoObservaciones"></div>
          </div>

          <div class="container-detalles mb-3">
            <h2 class="my-5">Deja tu comentario</h2>
            {% if app.user %}
            {{
              form_start(formObservacion, {
                attr: {
                  id: "observacion-form",
                  class: "observacion-form",
                  action: path("guia")
                }
              })
            }}
            {{
              form_widget(formObservacion.contenido, {
                attr: {
                  class: "form-control",
                  placeholder: "Escribe aquí..."
                }
              })
            }}
            <input type="hidden" name="evento_id" id="evento_id" value="" />
            <button type="submit" id="submit-btn" class="btn-primary my-3">
              Publicar observación
            </button>
            {{ form_end(formObservacion) }}
            {% endif %}
            <div class="imagenes-container" id="contenidoImagenes"></div>
          </div>

          <div class="container-detalles mb-5">
            <h2 class="my-5">Añade una foto de la visita</h2>
            {% if evento is not null %}
            {{
              form_start(imagenesForm, {
                attr: {
                  id: "imagenes-form",
                  class: "imagenes-form",
                  enctype: "multipart/form-data"
                },
                action: path("add_imagen", { id: evento.id }),
                method: "POST"
              })
            }}
            {{ form_widget(imagenesForm) }}
            <input
              type="hidden"
              name="evento_img_id"
              id="evento_img_id"
              value=""
            />
            <button type="submit" class="btn-tertiary">
              {{ button_label|default('Publicar foto') }}
            </button>
            {{ form_end(imagenesForm) }}

            {% else %}
            <p>El evento no está definido.</p>
            {% endif %}
          </div>
          {% if evento is not null %}
          <form
            action="{{ path('store', { id: evento.id }) }}"
            id="formularioEventos"
            method="POST"
          >
            <div class="detalle-recaudacion">
              <table class="table">
                <thead>
                  <tr class="text-center align-middle">
                    <th>Pax</th>
                    <th>Guía</th>
                    <th>Efectivo</th>
                    <th></th>
                    <th>Recaudación</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody>
                  <tr class="text-center align-middle">
                    <td id="cantidadReservasBody" name="asistencia"></td>
                    <td id="modalGuia"></td>
                    <td>
                      <input
                        type="text"
                        id="efectivo"
                        class="form-control"
                        value=""
                        name="efectivo"
                      />
                    </td>
                    <td>
                      <button type="button" id="validar" class="btn-primary">
                        Validar
                      </button>
                    </td>
                    <td id="totalIngresado"></td>
                  </tr>
                </tbody>
              </table>
            </div>

            <div class="asistentes">
              <input
                type="hidden"
                id="totalAsistentesConfirmados"
                name="totalAsistentesConfirmados"
                value="0"
              />
              <input
                type="hidden"
                id="guiaIdGlobal"
                name="guiaIdGlobal"
                value="0"
              />
              <table class="table">
                <thead class="table__head">
                  <tr>
                    <th>Asistió</th>
                    <th>Cliente</th>
                    <th>Cantidad</th>
                    <th>E-mail</th>
                    <th>Teléfono</th>
                  </tr>
                </thead>
                <tbody id="tablaReservasBody"></tbody>
              </table>
            </div>

            <div class="modal-footer">
              <button
                type="button"
                class="btn-secondary"
                data-bs-dismiss="modal"
              >
                Cerrar
              </button>
              <button type="submit" id="guardarBtn" class="btn-success">
                <div
                  class="d-flex justify-content-center align-content-center gap-2"
                >
                  <i class="bi bi-unlock-fill"></i>
                  <span>Guardar</span>
                </div>
              </button>
            </div>
          </form>
          {% else %}
  
    <h1>No hay eventos</h1>
  
{% endif %}
        </div>
      </div>
    </div>
  </div>
  <div id="calendario"></div>
</div>

{% endblock %} {% block javascripts %}
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
  crossorigin="anonymous"
></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
<script
  src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"
  integrity="sha256-8EcfIJRWyvnu/U0OsfCk05x1JGVmeC2a7sJQHrbWYSA="
  crossorigin="anonymous"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.8/axios.min.js"
  integrity="sha512-PJa3oQSLWRB7wHZ7GQ/g+qyv6r4mbuhmiDb8BjSFZ8NZ2a42oTtAq5n0ucWAwcQDlikAtkub+tPVCw4np27WCg=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script type="text/javascript">
  var currentUserId = {{ app.user.id|json_encode|raw }};
</script>

<script type="module">

              let selectedEventId = null;
              let guiaIdGlobal = null;

              document.addEventListener("DOMContentLoaded", () => {
                let calendarEl = document.getElementById("calendario");

                $.ajaxSetup({
                  headers:{
                      'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content'),
                  }
                });

                let eventData = {{ data|raw }};
                
                let events = eventData.filter(event => event.reservas && event.reservas.length > 0).map(event => ({
                  id: event.id,
                  title: event.cerrado ? event.titulo + '🔒' : event.titulo,
                  start: moment(event.inicio, "DD/MM/YYYY").format('YYYY-MM-DD'),
                  end: moment(event.fin, "DD/MM/YYYY").format('YYYY-MM-DD'),
                  color: event.color,
                  reservas: event.reservas,
                  observaciones: event.observaciones,
                  imagenes: event.imagenes,
                  guia: event.guia,
                  guia_id: event.guia_id,
                  cerrado: event.cerrado
              }));

                let calendar = new FullCalendar.Calendar(calendarEl, {
                  initialView: 'dayGridMonth',
                  locale: "es",
                  timeZone: "Europe/Paris",
                  height: 650,
                  views: {
                    day: {
                        titleFormat: {
                            year: 'numeric', month: 'short', day: 'numeric', weekday: 'narrow'
                        },
                    },
                },
                  headerToolbar: {
                      start: "prev, next today",
                      center: "title",
                      end: "dayGridMonth, listWeek, listDay",
                  },
                  buttonText: {
                      today: "Hoy",
                      month: "Mes",
                      listWeek: "Semana",
                      listDay: "Día"
                  },
                  events: events,
                  selectable: true,
                  editable: true,
                  allDaySlot: false,
                  eventClick: function (eventData) {
                    let event = eventData.event;
                    let reservas = event.extendedProps.reservas;
                    let observaciones = event.extendedProps.observaciones;
                    let imagenes = event.extendedProps.imagenes;
                    let cerrado =  event.extendedProps.cerrado;

                    selectedEventId = event.id;
                    guiaIdGlobal = event.extendedProps.guia_id;

                    $('#modalFecha').html(moment(event.start).format('DD-MM-YYYY'));
                    $('#modalTitulo').html(event.title);
                    $('#modalGuia').html(event.extendedProps.guia);

                    document.getElementById('evento_id').value = selectedEventId;
                    document.getElementById('evento_img_id').value = selectedEventId;

                    showReservasModal(selectedEventId, reservas, observaciones, imagenes, cerrado);

                    $('#reservaModal').modal('show');
                }
            });

            calendar.render();
        });

        $.fn.toggleText = function(t1, t2) {
          if (this.text() === t1) {
              this.text(t2);
          } else {
              this.text(t1);
          }
          return this;
      };


        let asistentesArray = [];

        function showReservasModal(eventId, reservas, observaciones, imagenes,  cerrado) {
          let asistentesArray = reservas.map(reserva => reserva.cantidadAsistentes);

          $('#tablaReservasBody').empty();
          $('#contenidoObservaciones').empty();
          $('#cantidadReservasBody').empty();
          $('#contenidoImagenes').empty();


          reservas.forEach((reserva, index) => {
              let html = `
                  <tr class="text-center align-middle">
                      <td><input type="checkbox" class="asistenciaCheckbox" id="asistencia_${index}" name="asistencia[${index}]" value="${reserva.cantidadAsistentes}" /></td>
                      <td class="modalUsuario${index} text-center">${reserva.usuario}</td>
                      <td class="modalAsistentes${index}">${reserva.cantidadAsistentes}</td>
                      <td class="modalEmail${index}">${reserva.email}</td>
                      <td class="modalTelefono${index}">${reserva.telefono}</td>
                  </tr>`;
              $('#tablaReservasBody').append(html);
          });

          observaciones.forEach(observacion => {
            console.log(observacion)
            let showDeleteButton = observacion.autor_id === currentUserId;
            let html = `
            <div class="comentario-item comentario-container" id="comentario_${observacion.id}">
                <div class="d-flex align-items-center mb-3">
                    <img src="/uploads/images/avatars/${observacion.avatar}.jpg" alt="Avatar" class="rounded-circle me-3" width="50" height="50">
                    <div class="d-flex flex-column gap-2">
                        <h3 class="mb-0"><strong>${observacion.autor}</strong></h3>
                        <p class="mb-0 fs-3">${observacion.contenido}</p>
                        <small class="text-muted">${moment(observacion.fecha_registro).format('DD-MM-YYYY HH:mm')}</small>
                        <div class="d-flex justify-content-end">
                        ${showDeleteButton ? `<button class="btn btn-danger btn-sm btn-eliminar-observacion" data-id="${observacion.id}">X</button>` : ''}
                      </div>
                    </div>
                  </div>
                </div>`;
              $('#contenidoObservaciones').append(html);
          });
          imagenes.forEach(imagen => {
            console.log(imagen)
            let html = `
            <div class="comentario-items comentario-container" id="imagen_${imagen.id}">
                <img src="/uploads/images/fotosTours/mini/150x150-${imagen.nombre}" alt="${imagen.nombre}">
                        <button class="btn btn-danger btn-sm btn-eliminar-imagen d-flex" data-id="${imagen.id}">Eliminar</button>

            </div>`;
              $('#contenidoImagenes').append(html);
          });

          let totalAsistentes = asistentesArray.reduce((acc, val) => acc + val, 0);
          let html = `<tr class="text-center"><td class="text-center"><h5>${totalAsistentes}</h5></td></tr>`;


          $('#cantidadReservasBody').append(html);

           $('#guardarBtn').prop('disabled', false);
                $('#guardarBtn').toggleClass('btn-success', !cerrado);
                $('#guardarBtn').toggleClass('btn-warning', cerrado);
                $('#guardarBtn').text(cerrado ? 'Modificar' : 'Guardar');
                $('#guardarBtn i').toggleClass('bi-unlock-fill', !cerrado);
                $('#guardarBtn i').toggleClass('bi-lock-fill', cerrado);

          $('#formularioEventos input, #formularioEventos textarea, #formularioEventos select').prop('disabled', cerrado);
            $('.asistenciaCheckbox').prop('disabled', cerrado);


          //* ID para formulario OBSERVACION-FORM
          document.getElementById('evento_id').value = eventId;

          //* ID para formulario IMAGENES-FORM
          document.getElementById('evento_img_id').value = eventId;

          // Abrir el modal
          $('#reservaModal').modal('show');
        }

        const botonValidar = document.getElementById("validar");
        var comentariosContainer = $('#comentarios');

        botonValidar.addEventListener("click", function() {
            // Obtener el valor del campo 'efectivo'
            let efectivoValue = $('#efectivo').val().trim();

            // Realizar alguna validación si es necesario
            if (efectivoValue === "") {
                $('#totalIngresado').text('Ingresa efectivo');
            } else {
                $('#totalIngresado').text(efectivoValue + ' €');
            }
        });


        $('#observacion-form').on('submit', function(e) {
          e.preventDefault();

          let formData = new FormData(this);
          let url = $(this).attr('action');

          fetch(url, {
              method: 'POST',
              body: formData
          })
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  let nuevoComentario = `
                  <div class="comentario-item comentario-container" id="comentario_${data.observacion_id}">
                      <div class="d-flex align-items-center mb-3">
                          <img src="uploads/images/avatars/${data.autor_avatar}.jpg" alt="Avatar" class="rounded-circle me-3" width="50" height="50">
                          <div class="d-flex flex-column gap-2">
                              <p class="mb-0"><strong>${data.autor_nombre} ${data.autor_apellidos}</strong></p>
                              <p class="mb-0 fs-3">${data.contenido}</p>
                              <small class="text-muted">${moment(data.fecha_registro).format('DD-MM-YYYY HH:mm')}</small>

                          </div>

                        </div>
                        <div class="d-flex justify-content-end">
                          <button class="btn btn-danger btn-sm btn-eliminar-observacion d-inline-block" data-id="${data.observacion_id}">X</button>
                          </div>
                      </div>`;
                  $('#contenidoObservaciones').append(nuevoComentario);
                  $('#observacion_guia_form_contenido').val('');
              } else {
                  console.error(data.error);
              }
          })
          .catch(error => {
              console.error('Error:', error);
          });
      });

      $(document).on('click', '.btn-eliminar-observacion', function() {
        let observacionId = $(this).data('id');
        let url = "{{ path('delete_observacion', {'id': '__ID__'}) }}".replace('__ID__', observacionId);
        let csrfToken = "{{ csrf_token('delete_observacion') }}";

        $.ajax({
            url: url,
            method: 'DELETE',
            data: {_token: csrfToken},
            success: function(response) {
                if (response.success) {
                    $('#comentario_' + observacionId).remove();
                } else {
                    console.error(response.error);
                }
            },
            error: function(xhr, status, error) {
                console.error('Error en la solicitud:', xhr.responseText);
            }
        });
    });

    $(document).ready(function() {
      // Manejar el formulario de imágenes
      $('#imagenes-form').on('submit', function(e) {
          e.preventDefault();
          let formData = new FormData(this);

          // Asegúrate de que el ID del evento esté incluido en los datos del formulario
          formData.append('evento_img_id', $('#evento_img_id').val());

          let url = $(this).attr('action');
          fetch(url, {
              method: 'POST',
              body: formData
          })
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  data.imagenes.forEach(imagen => {
                      let nuevaImagen = `
                          <div class="comentario-items comentario-container" id="imagen_${imagen.imagen_id}">
                                  <img src="/uploads/images/fotosTours/mini/150x150-${imagen.nombre}" alt="${imagen.nombre}">
                                  <button class="btn btn-danger btn-sm btn-eliminar-imagen d-flex justify-content-end" data-id="${imagen.imagen_id}">Eliminar</button>

                          </div>`;
                      $('#contenidoImagenes').append(nuevaImagen);
                  });
                  $('#imagenes_form_imagenes').val(''); // Clear the input field
              } else {
                  alert('Error al subir las imágenes');
              }
          })
          .catch(error => console.error('Error:', error));
      });

      // Manejar la eliminación de imágenes
      $(document).on('click', '.btn-eliminar-imagen', function() {
          let imagenId = $(this).data('id');
          let url = "{{ path('delete_imagen', {'id': '__ID__'}) }}".replace('__ID__', imagenId);
          let csrfToken = "{{ csrf_token('delete_imagen') }}";

          $.ajax({
              url: url,
              method: 'DELETE',
              data: {_token: csrfToken},
              success: function(response) {
                  if (response.success) {
                      $('#imagen_' + imagenId).remove();
                  } else {
                      console.error(response.error);
                  }
              },
              error: function(xhr, status, error) {
                  console.error('Error en la solicitud:', xhr.responseText);
              }
          });
      });
  });


      const formularioEventos = document.getElementById('formularioEventos');

              formularioEventos.addEventListener('submit', function (e) {
                  e.preventDefault();

                  // Crear un objeto FormData
                  const formData = new FormData();

                  let efectivoValue = $('#efectivo').val().trim();
                  let asistenciaChecked = false;
                  let totalAsistentesConfirmados = 0;

                  // Iterar sobre todas las casillas de verificación
                  $('.asistenciaCheckbox').each(function () {
                      if ($(this).is(':checked')) {
                          asistenciaChecked = true;
                          totalAsistentesConfirmados += parseInt($(this).val(), 10); // Sumar los asistentes confirmados
                      }
                  });

                  // Calcular el total de asistentes que reservaron
                  let totalAsistentesGlobal = asistentesArray.reduce((accumulator, currentValue) => accumulator + currentValue, 0);

                  formData.append('efectivo', efectivoValue);
                  formData.append('asistencia', asistenciaChecked ? '1' : '0');
                  formData.append('cantidad_asistentes', totalAsistentesConfirmados);
                  formData.append('user_id', guiaIdGlobal);
                  formData.append('id_evento', selectedEventId);
                  formData.append('cerrado', '1');

                  $.ajax({
                      url: "{{ path('store', {'id': '__ID__'}) }}".replace('__ID__', selectedEventId),
                      method: "POST",
                      processData: false,
                      contentType: false,
                      data: formData,
                      success: function (response) {
                        location.reload();
                      },
                      error: function (error) {
                          console.error('Error en la solicitud:', error);
                          location.reload();
                    }
                  });
              });
</script>

{% endblock %}
